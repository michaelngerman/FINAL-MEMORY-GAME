html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

html,
body {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

body {
    background: #ffffff url('../img/geometry2.png'); /* Background pattern from Subtle Patterns */
    font-family: 'Coda', cursive;
}

/* FLEX CONTAINER FOR GAMEBOARD */
.container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

h1 {
    font-family: 'Open Sans', sans-serif;
    font-weight: 300;
}

/*
 * Styles for the deck of cards
 */

.deck {
    width: 660px;
    min-height: 680px;
    background: linear-gradient(160deg, #02ccba 0%, #aa7ecd 100%);
    padding: 32px;
    border-radius: 10px;
    box-shadow: 12px 15px 20px 0 rgba(46, 61, 73, 0.5);
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    margin: 0 0 3em;
}

/* CARD STYLING */
.deck .card {
    height: 125px;
    width: 125px;
    background: #2e3d49;
    font-size: 0;
    color: #ffffff;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 5px 2px 20px 0 rgba(46, 61, 73, 0.5);
}

/* CARD OPEN STYLING */
.deck .card.open {
    transform: rotateY(0);
    background: #02b3e4;
    cursor: default;
    animation-name: flipCards;
    animation-duration: 0.3s;
    animation-timing-function: ease-in;
}

/* SHOWS CARD ICON */
.deck .card.show {
    font-size: 33px;
}

/* MATCHING STYLING */
.deck .card.match {
    cursor: default;
    background: #02ccba;
    font-size: 33px;
    animation-name: matchYes;
    animation-duration: 0.5s;
    animation-timing-function: ease-in;

}

/* NON-MATCHING STYLING */

.deck .card.noMatch {
    background: crimson;
    animation-name: matchNo;
    animation-duration: 0.5s;
    animation-timing-function: ease-in;

}

/*
 * Styles for the Score Panel
 */

/* PANEL */
.score-panel {
    text-align: left;
    width: 550px;
    margin-bottom: 10px;
}

/* STARS */
.score-panel .stars {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin: 0 5px 0 0;
}

.stars {
  float: left;
  color: gold;
}

/* STAR LIST STYLING */
.score-panel .stars li {
    list-style: none;
    display: inline-block;
}

/* RESTART BUTTON STYLING */
.score-panel .restart {
    float: right;
    cursor: pointer;
    color: blue;
}

/* Timer */
.timer {
  margin: 0 2.5em;
}

/* MESSAGE BOX - for match, no match, reset, etc */
.message {
  margin: 0 1em;
}

/* MODAL */
.modal-box {
  position: fixed;
  top: 0;
	bottom: 0;
	left: 0;
	right: 0;
  background: rgba(0,0,0,0.3);
}

.hidden {
  display: none;
}

/* MODAL MESSAGE STYLING */
.modal-message {
  position: relative;
  padding: 0.5em;
  border-radius: 10px;
  height: 250px;
  width: 400px;
  top: 15%;
  left: 40%;
  background: #fff;
}

.modal-message h2 {
  margin: 0 0.5em ;
}

/* LINE BREAK STYLING */
.line {
  border-bottom: 1px solid black;
  margin: 0.5em;
}


.finish-message {
  color: blue;
  font-weight: bold;
  font-size: 24px;
  text-align: center;

}






/* DISABLE CARDS */
.disable {
  pointer-events: none;
}

/* MODAL CLOSE BUTTON */
.close {
  position: absolute;
  font-weight: bold;
  top: 13px;
  right: 20px;
  color: blue;
  text-decoration: none;
}

.close:hover {
  color: red;
}

/* PLAY AGAIN BUTTON */
.button {
  display: flex;
  justify-content: center;
}
.replay {
  position: fixed;
  display: block;
  margin: 0 auto;
  font-weight: bold;
  font-size: 20px;
  background: #02ccba;
  border-radius: 5px;
  border: none;
  padding: 5px;

}

/* CSS ANIMAITON */

/* CARD FLIPPING ANIMATION */
@keyframes flipCards {
	from {
		transform: rotateY(90deg);
	}
	to {
    transform: rotateY(0deg);
	}
}

/* CARD SPIN ANIMATION */
@keyframes matchYes {
  from {
      transform:rotate(0deg);
  }
  to {
      transform:rotate(360deg);
  }
}

/* CARD SHAKE ANIMATION */
@keyframes matchNo {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }

  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}
